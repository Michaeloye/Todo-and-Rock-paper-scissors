{"version":3,"sources":["usePrevious.js","components/Todo.js","components/Form.js","components/FilterButton.js","images/logo.svg","components/SelectRps.js","components/randomRPS.js","components/Modal.js","images/icon-paper.svg","images/icon-rock.svg","images/icon-scissors.svg","images/image-rules.svg","images/icon-close.svg","components/Display.js","App.js","index.js"],"names":["usePrevious","value","ref","useRef","useEffect","current","Todo","props","useState","isEditing","setEditing","newName","setNewName","editFieldRef","editButtonRef","wasEditing","editingTemplate","className","onSubmit","e","preventDefault","Error","editTask","id","err","console","log","htmlFor","name","type","onChange","target","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","Form","setName","document","title","addTask","autoComplete","FilterButton","aria-pressed","isPressed","setFilter","SelectRps","component","borderColor","length","handleClick","src","img","alt","randomRPS","list","Math","floor","random","modalRoot","getElementById","Modal","children","elRef","createElement","classList","add","appendChild","removeChild","createPortal","Display","hasPicked","setHasPicked","clickedComponent","setClickedComponent","pcPickedComponent","setPcPickedComponent","housePicked","setHousePicked","declareVerdict","setDeclareVerdict","verdictText","setVerdictText","playAgain","setPlayAgain","score","setScore","showModal","setShowModal","DATA","iconPaper","iconRock","iconScissors","toggleModal","filteredUpdatedComponent","map","button","filter","undefined","updatedPcComponent","i","setInterval","setTimeout","clearInterval","pcPick","buttonList","userPickTemplate","userHasPickedTemplate","nanoid","logo","imageRules","iconClose","to","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","listHeadingRef","prevTaskLength","updatedTasks","remainingTasks","editedTaskList","taskList","filterList","taskNoun","headingText","path","newTask","tabIndex","role","aria-labelledby","ReactDOM","render"],"mappings":"wNAUeA,MARf,SAAqBC,GACnB,IAAMC,EAAMC,mBAIZ,OAHAC,qBAAU,WACRF,EAAIG,QAAUJ,KAETC,EAAIG,S,OCJE,SAASC,EAAKC,GAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAeV,iBAAO,MACtBW,EAAgBX,iBAAO,MAEvBY,EAAaf,EAAYS,GAgB/B,IAAMO,EACJ,uBAAMC,UAAU,cAAcC,SAZhC,SAAsBC,GACpBA,EAAEC,iBACF,IACE,IAAKT,EAAS,MAAMU,MAAM,oCACrBd,EAAMe,SAASf,EAAMgB,GAAIZ,GAC9B,MAAOa,GACPC,QAAQC,IAAIF,GAEdZ,EAAW,IACXF,GAAW,IAGX,UACE,sBAAKO,UAAU,aAAf,UACE,wBAAOA,UAAU,aAAaU,QAASpB,EAAMgB,GAA7C,0BACgBhB,EAAMqB,QAEtB,uBACEL,GAAIhB,EAAMgB,GACVN,UAAU,YACVY,KAAK,OACL5B,MAAOU,EACPmB,SAzBR,SAAsBX,GACpBP,EAAWO,EAAEY,OAAO9B,QAyBdC,IAAKW,OAGT,sBAAKI,UAAU,YAAf,UACE,yBACEY,KAAK,SACLZ,UAAU,kBACVe,QAAS,kBAAMtB,GAAW,IAH5B,mBAME,uBAAMO,UAAU,kBAAhB,sBAA4CV,EAAMqB,WAEpD,yBAAQC,KAAK,SAASZ,UAAU,6BAAhC,iBAEE,uBAAMA,UAAU,kBAAhB,0BAAgDV,EAAMqB,iBAKxDK,EACJ,sBAAKhB,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UACE,uBACEM,GAAIhB,EAAMgB,GACVM,KAAK,WACLK,eAAgB3B,EAAM4B,UACtBL,SAAU,kBAAMvB,EAAM6B,oBAAoB7B,EAAMgB,OAElD,uBAAON,UAAU,aAAaU,QAASpB,EAAMgB,GAA7C,SACGhB,EAAMqB,UAGX,sBAAKX,UAAU,YAAf,UACE,yBACEY,KAAK,SACLZ,UAAU,MACVe,QAAS,kBAAMtB,GAAW,IAC1BR,IAAKY,EAJP,kBAMO,sBAAMG,UAAU,kBAAhB,SAAmCV,EAAMqB,UAEhD,yBACEC,KAAK,SACLZ,UAAU,kBACVe,QAAS,kBAAMzB,EAAM8B,WAAW9B,EAAMgB,KAHxC,oBAKS,sBAAMN,UAAU,kBAAhB,SAAmCV,EAAMqB,gBAexD,OATAxB,qBAAU,YACHW,GAAcN,GACjBI,EAAaR,QAAQiC,QAEnBvB,IAAeN,GACjBK,EAAcT,QAAQiC,UAEvB,CAACvB,EAAYN,IAET,oBAAIQ,UAAU,OAAd,SAAsBR,EAAYO,EAAkBiB,ICtD9CM,MA3Cf,SAAchC,GACZ,MAAwBC,mBAAS,IAAjC,mBAAOoB,EAAP,KAAaY,EAAb,KAmBA,OAHApC,qBAAU,WACRqC,SAASC,MAAQ,UAGjB,uBAAMxB,SAdR,SAAsBC,GACpBA,EAAEC,iBACF,IACE,IAAKQ,EAAM,MAAMP,MAAM,oCAClBd,EAAMoC,QAAQf,GACnB,MAAOJ,GACPC,QAAQC,IAAIF,GAEdgB,EAAQ,KAMR,UACE,oBAAIvB,UAAU,gBAAd,SACE,uBAAOU,QAAQ,iBAAiBV,UAAU,YAA1C,sCAIF,uBACEY,KAAK,OACLN,GAAG,iBACHN,UAAU,kBACVW,KAAK,OACLgB,aAAa,MACb3C,MAAO2B,EACPE,SA/BN,SAAsBX,GACpBqB,EAAQrB,EAAEY,OAAO9B,UAgCf,wBAAQ4B,KAAK,SAASZ,UAAU,2BAAhC,qBCrBS4B,MAff,SAAsBtC,GACpB,OACE,yBACEsB,KAAK,SACLZ,UAAU,iBACV6B,eAAcvC,EAAMwC,UACpBf,QAAS,kBAAMzB,EAAMyC,UAAUzC,EAAMqB,OAJvC,UAME,sBAAMX,UAAU,kBAAhB,mBACA,+BAAOV,EAAMqB,OACb,sBAAMX,UAAU,kBAAhB,wBCZS,MAA0B,iCCqB1BgC,MAnBf,SAAmB1C,GACjB,OACE,qBAAKU,UAAWV,EAAM2C,UAAtB,SACE,qBAAKjC,UAAWV,EAAM4C,YAAtB,SACE,wBACE5B,GAAIhB,EAAMgB,GACVS,QAAS,iBACyC,MAAhDzB,EAAM2C,UAAU3C,EAAM2C,UAAUE,OAAS,GACrC7C,EAAM8C,YAAY9C,EAAM2C,WACxB,MALR,SAQE,qBAAKI,IAAK/C,EAAMgD,IAAKC,IAAKjD,EAAMiD,IAAKvC,UAAU,sBCV1CwC,MAJf,SAAmBC,GACjB,OAAOA,EAAKC,KAAKC,MAAMD,KAAKE,SAAWH,EAAKN,UCExCU,EAAYrB,SAASsB,eAAe,SAoB3BC,EAlBD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACTC,EAAQ/D,iBAAO,MAWrB,OAVK+D,EAAM7D,UACT6D,EAAM7D,QAAUoC,SAAS0B,cAAc,OACvCD,EAAM7D,QAAQ+D,UAAUC,IAAI,MAG9BjE,qBAAU,WAER,OADA0D,EAAUQ,YAAYJ,EAAM7D,SACrB,kBAAMyD,EAAUS,YAAYL,EAAM7D,YACxC,IAEImE,uBACL,qBAAKvD,UAAU,mBAAf,SAAmCgD,IACnCC,EAAM7D,UCnBK,MAA0B,uCCA1B,MAA0B,sCCA1B,MAA0B,0CCA1B,MAA0B,wCCA1B,MAA0B,uCCmO1BoE,MAtNf,WACE,MAAkCjE,oBAAS,GAA3C,mBAAOkE,EAAP,KAAkBC,EAAlB,KACA,EAAgDnE,mBAAS,IAAzD,mBAAOoE,EAAP,KAAyBC,EAAzB,KACA,EAAkDrE,mBAAS,IAA3D,mBAAOsE,EAAP,KAA0BC,EAA1B,KACA,EAAsCvE,mBAAS,IAA/C,mBAAOwE,EAAP,KAAoBC,EAApB,KACA,EAA4CzE,oBAAS,GAArD,mBAAO0E,EAAP,KAAuBC,EAAvB,KACA,EAAsC3E,mBAAS,IAA/C,mBAAO4E,EAAP,KAAoBC,EAApB,KACA,EAAkC7E,mBAAS,IAA3C,mBAAO8E,EAAP,KAAkBC,EAAlB,KACA,EAA0B/E,mBAAS,GAAnC,mBAAOgF,EAAP,KAAcC,EAAd,KAGA,EAAkCjF,oBAAS,GAA3C,mBAAOkF,EAAP,KAAkBC,EAAlB,KAEMC,EAAO,CACX,CACE1C,UAAW,kBACX3B,GAAI,QACJ4B,YAAa,qBACbI,IAAKsC,EACLrC,IAAK,SAEP,CACEN,UAAW,iBACX3B,GAAI,OACJ4B,YAAa,oBACbI,IAAKuC,EACLtC,IAAK,QAEP,CACEN,UAAW,qBACX3B,GAAI,WACJ4B,YAAa,wBACbI,IAAKwC,EACLvC,IAAK,aAIT,SAASwC,IACPL,GAAcD,GAIhB,SAASrC,GAAYH,GACnB,IAeM+C,EAfmBL,EAAKM,KAAI,SAACC,GACjC,OAAIA,EAAOjD,YAAcA,GAA2B,oBAAdA,EAC7B,2BAAKiD,GAAZ,IAAoBjD,UAAW,4BAE/BiD,EAAOjD,YAAcA,GACP,mBAAdA,EAEO,2BAAKiD,GAAZ,IAAoBjD,UAAW,2BAE/BiD,EAAOjD,YAAcA,GACP,uBAAdA,EAEO,2BAAKiD,GAAZ,IAAoBjD,UAAW,oCAJ1B,KAOyCkD,QAChD,SAACD,GAAD,YAAuBE,IAAXF,KAGdtB,EAAmB,WAAnB,cAAuBoB,IACvBtB,GAAa,GAMf,WACE,IAAM2B,EAAqBV,EAAKM,KAAI,SAACC,GACnC,MAAyB,oBAArBA,EAAOjD,UACF,2BAAKiD,GAAZ,IAAoBjD,UAAW,+BACD,mBAArBiD,EAAOjD,UACT,2BAAKiD,GAAZ,IAAoBjD,UAAW,8BACD,uBAArBiD,EAAOjD,UACT,2BAAKiD,GAAZ,IAAoBjD,UAAW,uCAD1B,KAKLqD,EAAIC,aAAY,WAClBzB,EAAqBtB,EAAU6C,MAC9B,IACHG,YAAW,WACTC,cAAcH,GACdxB,EAAqBtB,EAAU6C,IAC/BrB,EAAe,oBACfE,GAAkB,KACjB,KAvBHwB,GA0BF,IAAMC,GAAahB,EAAKM,KAAI,SAACC,GAAD,OAC1B,cAAC,EAAD,CACEjD,UAAWiD,EAAOjD,UAClB3B,GAAI4E,EAAO5E,GACX4B,YAAagD,EAAOhD,YACpBI,IAAK4C,EAAO5C,IACZC,IAAK2C,EAAO3C,IAEZH,YAAaA,IADR8C,EAAO5E,OAKhBnB,qBAAU,WACRqC,SAASC,MAAQ,uBAEM,IAAnBwC,GACFK,EAAa,cAGbX,EAAiBrD,KAAOuD,EAAkBvD,KACvB,IAAnB2D,EAEAG,EAAe,SAEW,UAAxBT,EAAiBrD,IAA2C,SAAzBuD,EAAkBvD,IAC5B,aAAxBqD,EAAiBrD,IACS,UAAzBuD,EAAkBvD,IACK,SAAxBqD,EAAiBrD,IACS,aAAzBuD,EAAkBvD,MACH,IAAnB2D,GAEAG,EAAe,WACfI,EAASD,EAAQ,KAES,aAAxBZ,EAAiBrD,IACQ,SAAzBuD,EAAkBvD,IACO,SAAxBqD,EAAiBrD,IAA0C,UAAzBuD,EAAkBvD,IAC5B,UAAxBqD,EAAiBrD,IACS,aAAzBuD,EAAkBvD,MACH,IAAnB2D,GAEAG,EAAe,YAEfI,EAASD,EAAQ,IAEjBH,EAAe,MAEhB,CAACH,IAEJ,IAAM2B,GACJ,yBAAS5F,UAAU,uBAAnB,SAA2C2F,KAIvCE,GACJ,0BAAS7F,UAAU,sBAAnB,UACE,cAAC,EAAD,CACEiC,UAAW0B,EAAiB1B,UAC5B3B,GAAIqD,EAAiBrD,GACrB4B,YAAayB,EAAiBzB,YAC9BI,IAAKqB,EAAiBrB,IACtBC,IAAKoB,EAAiBpB,KACjBuD,eAEP,mBAAG9F,UAAU,aAAb,wBACA,qBAAKA,UAAU,WACf,cAAC,EAAD,CACEiC,UAAW4B,EAAkB5B,UAC7B3B,GAAIuD,EAAkBvD,GACtB4B,YAAa2B,EAAkB3B,YAC/BI,IAAKuB,EAAkBvB,IACvBC,IAAKsB,EAAkBtB,KAClBuD,eAEN7B,EACC,mBAAGjE,UAAU,mBAAb,SAAiC+D,IAC/B,KACJ,oBAAI/D,UAAU,eAAd,SAA8BmE,IAC7BF,EACC,wBACEjE,UAAU,aACVe,QAAS,WACP2C,GAAa,GACbQ,GAAkB,IAJtB,SAOGG,IAED,QAIR,OACE,sBAAKrE,UAAU,WAAf,UACE,0BAASA,UAAU,UAAnB,UACE,qBACEA,UAAU,0BACVqC,IAAK0D,EACLxD,IAAI,wBAEN,sBAAKvC,UAAU,cAAf,UACE,mBAAGA,UAAU,QAAb,mBACA,mBAAGA,UAAU,SAAb,SAAuBuE,UAGzBd,EAA+BoC,GAAnBD,GACd,wBAAQ5F,UAAU,QAAQe,QAASgE,EAAnC,mBAGCN,EACC,eAAC,EAAD,WACE,qBAAKpC,IAAK2D,EAAYzD,IAAI,QAAQvC,UAAU,gBAC5C,wBAAQe,QAASgE,EAAjB,SACE,qBAAK1C,IAAK4D,EAAW1D,IAAI,QAAQvC,UAAU,oBAG7C,KACJ,wBAAQA,UAAU,aAAlB,SACE,cAAC,IAAD,CAAMkG,GAAG,IAAT,yCCpNFC,EAAa,CACjBC,IAAK,kBAAM,GACXC,OAAQ,SAACC,GAAD,OAAWA,EAAKpF,WACxBqF,UAAW,SAACD,GAAD,OAAUA,EAAKpF,YAGtBsF,EAAeC,OAAOC,KAAKP,GA2GlBQ,MAzGf,SAAarH,GACX,MAA0BC,mBAASD,EAAMsH,OAAzC,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAA4BtH,mBAAS,OAArC,mBAAO4F,EAAP,KAAepD,EAAf,KAEM+E,EAAiB5H,iBAAO,MAExB6H,EAAiBhI,EAAY6H,EAAMzE,QAOzC,SAAShB,EAAoBb,GAC3B,IAAM0G,EAAeJ,EAAM3B,KAAI,SAACqB,GAC9B,OAAIhG,IAAOgG,EAAKhG,GACP,2BAAKgG,GAAZ,IAAkBpF,WAAYoF,EAAKpF,YAE9BoF,KAETO,EAASG,GAGX,SAAS5F,EAAWd,GAClB,IAAM2G,EAAiBL,EAAMzB,QAAO,SAACmB,GAAD,OAAUhG,IAAOgG,EAAKhG,MAC1DuG,EAASI,GAGX,SAAS5G,EAASC,EAAIZ,GACpB,IAAMwH,EAAiBN,EAAM3B,KAAI,SAACqB,GAChC,OAAIhG,IAAOgG,EAAKhG,GACP,2BAAKgG,GAAZ,IAAkB3F,KAAMjB,IAEnB4G,KAETO,EAASK,GAEX,IAAMC,EAAWP,EACdzB,OAAOgB,EAAWhB,IAClBF,KAAI,SAACqB,GAAD,OACH,cAACjH,EAAD,CACEiB,GAAIgG,EAAKhG,GACTK,KAAM2F,EAAK3F,KACXO,UAAWoF,EAAKpF,UAEhBC,oBAAqBA,EACrBC,WAAYA,EACZf,SAAUA,GAHLiG,EAAKhG,OAOV8G,EAAaZ,EAAavB,KAAI,SAACtE,GAAD,OAClC,cAAC,EAAD,CAEEA,KAAMA,EACNmB,UAAWnB,IAASwE,EACpBpD,UAAWA,GAHNpB,MAOH0G,EAA+B,IAApBF,EAAShF,OAAe,OAAS,QAC5CmF,EAAW,UAAMH,EAAShF,OAAf,YAAyBkF,EAAzB,cAQjB,OANAlI,qBAAU,WACJyH,EAAMzE,OAAS4E,KAAoB,GACrCD,EAAe1H,QAAQiC,UAExB,CAACuF,EAAMzE,OAAQ4E,IAGhB,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOQ,KAAK,OAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,sBAAKvH,UAAU,sBAAf,UACE,sCAEA,cAAC,EAAD,CAAM0B,QAvEhB,SAAiBf,GACf,IAAM6G,EAAU,CAAElH,GAAI,QAAUwF,cAAUnF,KAAMA,EAAMO,WAAW,GACjE2F,EAAS,GAAD,mBAAKD,GAAL,CAAYY,QAsEZ,qBAAKxH,UAAU,oCAAf,SACGoH,IAGH,oBAAI9G,GAAG,eAAemH,SAAS,KAAKxI,IAAK6H,EAAzC,SACGQ,IAGH,oBACEI,KAAK,OACL1H,UAAU,wCACV2H,kBAAgB,eAHlB,SAKGR,IAEH,wBAAQnH,UAAU,kBAAlB,SACE,cAAC,IAAD,CAAMkG,GAAG,OAAT,gECxGd0B,IAASC,OACP,cAAC,EAAD,CAAKjB,MANM,CACX,CAAEtG,GAAI,SAAUK,KAAM,MAAOO,WAAW,GACxC,CAAEZ,GAAI,SAAUK,KAAM,QAASO,WAAW,GAC1C,CAAEZ,GAAI,SAAUK,KAAM,SAAUO,WAAW,MAI3CM,SAASsB,eAAe,W","file":"static/js/main.d574aab8.chunk.js","sourcesContent":["import { useRef, useEffect } from \"react\";\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nexport default usePrevious;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport usePrevious from \"../usePrevious\";\r\n\r\nexport default function Todo(props) {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n\r\n  const editFieldRef = useRef(null);\r\n  const editButtonRef = useRef(null);\r\n\r\n  const wasEditing = usePrevious(isEditing);\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    try {\r\n      if (!newName) throw Error(\"An empty task cannot be assigned\");\r\n      else props.editTask(props.id, newName);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input\r\n          id={props.id}\r\n          className=\"todo-text\"\r\n          type=\"text\"\r\n          value={newName}\r\n          onChange={handleChange}\r\n          ref={editFieldRef}\r\n        />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn todo-cancel\"\r\n          onClick={() => setEditing(false)}\r\n        >\r\n          Cancel\r\n          <span className=\"visually-hidden\">renaming {props.name}</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n        <input\r\n          id={props.id}\r\n          type=\"checkbox\"\r\n          defaultChecked={props.completed}\r\n          onChange={() => props.toggleTaskCompleted(props.id)}\r\n        />\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          {props.name}\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn\"\r\n          onClick={() => setEditing(true)}\r\n          ref={editButtonRef}\r\n        >\r\n          Edit <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn__danger\"\r\n          onClick={() => props.deleteTask(props.id)}\r\n        >\r\n          Delete <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!wasEditing && isEditing) {\r\n      editFieldRef.current.focus();\r\n    }\r\n    if (wasEditing && !isEditing) {\r\n      editButtonRef.current.focus();\r\n    }\r\n  }, [wasEditing, isEditing]);\r\n\r\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Form(props) {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    try {\r\n      if (!name) throw Error(\"An empty task cannot be assigned\");\r\n      else props.addTask(name);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    setName(\"\");\r\n  }\r\n  useEffect(() => {\r\n    document.title = \"Todo\";\r\n  });\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn toggle-btn\"\r\n      aria-pressed={props.isPressed}\r\n      onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span>{props.name}</span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilterButton;\r\n","export default __webpack_public_path__ + \"static/media/logo.a4a2b39f.svg\";","import React from \"react\";\r\n\r\nfunction SelectRps(props) {\r\n  return (\r\n    <div className={props.component}>\r\n      <div className={props.borderColor}>\r\n        <button\r\n          id={props.id}\r\n          onClick={() =>\r\n            props.component[props.component.length - 1] !== \"d\"\r\n              ? props.handleClick(props.component)\r\n              : null\r\n          }\r\n        >\r\n          <img src={props.img} alt={props.alt} className=\"rps-images\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectRps;\r\n","function randomRPS(list) {\r\n  return list[Math.floor(Math.random() * list.length)];\r\n}\r\n\r\nexport default randomRPS;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.getElementById(\"modal\");\r\n\r\nconst Modal = ({ children }) => {\r\n  const elRef = useRef(null);\r\n  if (!elRef.current) {\r\n    elRef.current = document.createElement(\"div\");\r\n    elRef.current.classList.add(\"m\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    modalRoot.appendChild(elRef.current);\r\n    return () => modalRoot.removeChild(elRef.current);\r\n  }, []);\r\n\r\n  return createPortal(\r\n    <div className=\"modal-firstchild\">{children}</div>,\r\n    elRef.current\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/icon-paper.8b57a6b1.svg\";","export default __webpack_public_path__ + \"static/media/icon-rock.476e90a9.svg\";","export default __webpack_public_path__ + \"static/media/icon-scissors.3b1a5d7e.svg\";","export default __webpack_public_path__ + \"static/media/image-rules.258b753f.svg\";","export default __webpack_public_path__ + \"static/media/icon-close.bde602ec.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { nanoid } from \"nanoid\";\r\nimport logo from \"../images/logo.svg\";\r\nimport SelectRps from \"./SelectRps\";\r\nimport randomRPS from \"./randomRPS\";\r\nimport Modal from \"./Modal\";\r\nimport iconPaper from \"../images/icon-paper.svg\";\r\nimport iconRock from \"../images/icon-rock.svg\";\r\nimport iconScissors from \"../images/icon-scissors.svg\";\r\nimport imageRules from \"../images/image-rules.svg\";\r\nimport iconClose from \"../images/icon-close.svg\";\r\n\r\nfunction Display() {\r\n  const [hasPicked, setHasPicked] = useState(false);\r\n  const [clickedComponent, setClickedComponent] = useState(\"\");\r\n  const [pcPickedComponent, setPcPickedComponent] = useState(\"\");\r\n  const [housePicked, setHousePicked] = useState(\"\");\r\n  const [declareVerdict, setDeclareVerdict] = useState(false);\r\n  const [verdictText, setVerdictText] = useState(\"\");\r\n  const [playAgain, setPlayAgain] = useState(\"\");\r\n  const [score, setScore] = useState(0);\r\n\r\n  // modal state\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const DATA = [\r\n    {\r\n      component: \"paper-component\",\r\n      id: \"paper\",\r\n      borderColor: \"paper-border-color\",\r\n      img: iconPaper,\r\n      alt: \"paper\",\r\n    },\r\n    {\r\n      component: \"rock-component\",\r\n      id: \"rock\",\r\n      borderColor: \"rock-border-color\",\r\n      img: iconRock,\r\n      alt: \"rock\",\r\n    },\r\n    {\r\n      component: \"scissors-component\",\r\n      id: \"scissors\",\r\n      borderColor: \"scissors-border-color\",\r\n      img: iconScissors,\r\n      alt: \"scissors\",\r\n    },\r\n  ];\r\n\r\n  function toggleModal() {\r\n    setShowModal(!showModal);\r\n  }\r\n\r\n  // This function should be called only in userPickTemplate\r\n  function handleClick(component) {\r\n    const updatedComponent = DATA.map((button) => {\r\n      if (button.component === component && component === \"paper-component\") {\r\n        return { ...button, component: \"paper-component-clicked\" };\r\n      } else if (\r\n        button.component === component &&\r\n        component === \"rock-component\"\r\n      ) {\r\n        return { ...button, component: \"rock-component-clicked\" };\r\n      } else if (\r\n        button.component === component &&\r\n        component === \"scissors-component\"\r\n      ) {\r\n        return { ...button, component: \"scissors-component-clicked\" };\r\n      }\r\n    });\r\n    const filteredUpdatedComponent = updatedComponent.filter(\r\n      (button) => button !== undefined\r\n    );\r\n\r\n    setClickedComponent(...filteredUpdatedComponent);\r\n    setHasPicked(true);\r\n\r\n    pcPick();\r\n  }\r\n\r\n  // This function should be called only when it is time for the pc to pick\r\n  function pcPick() {\r\n    const updatedPcComponent = DATA.map((button) => {\r\n      if (button.component === \"paper-component\") {\r\n        return { ...button, component: \"paper-component-pc-clicked\" };\r\n      } else if (button.component === \"rock-component\") {\r\n        return { ...button, component: \"rock-component-pc-clicked\" };\r\n      } else if (button.component === \"scissors-component\") {\r\n        return { ...button, component: \"scissors-component-pc-clicked\" };\r\n      }\r\n    });\r\n\r\n    let i = setInterval(() => {\r\n      setPcPickedComponent(randomRPS(updatedPcComponent));\r\n    }, 50);\r\n    setTimeout(() => {\r\n      clearInterval(i);\r\n      setPcPickedComponent(randomRPS(updatedPcComponent));\r\n      setHousePicked(\"THE HOUSE PICKED\");\r\n      setDeclareVerdict(true);\r\n    }, 3000);\r\n  }\r\n\r\n  const buttonList = DATA.map((button) => (\r\n    <SelectRps\r\n      component={button.component}\r\n      id={button.id}\r\n      borderColor={button.borderColor}\r\n      img={button.img}\r\n      alt={button.alt}\r\n      key={button.id}\r\n      handleClick={handleClick}\r\n    />\r\n  ));\r\n\r\n  useEffect(() => {\r\n    document.title = \"Rock-Paper-Scissors\";\r\n\r\n    if (declareVerdict === true) {\r\n      setPlayAgain(\"PLAY AGAIN\");\r\n    }\r\n    if (\r\n      clickedComponent.id === pcPickedComponent.id &&\r\n      declareVerdict === true\r\n    ) {\r\n      setVerdictText(\"DRAW\");\r\n    } else if (\r\n      ((clickedComponent.id === \"paper\" && pcPickedComponent.id === \"rock\") ||\r\n        (clickedComponent.id === \"scissors\" &&\r\n          pcPickedComponent.id === \"paper\") ||\r\n        (clickedComponent.id === \"rock\" &&\r\n          pcPickedComponent.id === \"scissors\")) &&\r\n      declareVerdict === true\r\n    ) {\r\n      setVerdictText(\"YOU WIN\");\r\n      setScore(score + 1);\r\n    } else if (\r\n      ((clickedComponent.id === \"scissors\" &&\r\n        pcPickedComponent.id === \"rock\") ||\r\n        (clickedComponent.id === \"rock\" && pcPickedComponent.id === \"paper\") ||\r\n        (clickedComponent.id === \"paper\" &&\r\n          pcPickedComponent.id === \"scissors\")) &&\r\n      declareVerdict === true\r\n    ) {\r\n      setVerdictText(\"YOU LOSE\");\r\n\r\n      setScore(score - 1);\r\n    } else {\r\n      setVerdictText(\"\");\r\n    }\r\n  }, [declareVerdict]);\r\n\r\n  const userPickTemplate = (\r\n    <section className=\"wrapper-before-click\">{buttonList}</section>\r\n  );\r\n\r\n  // The nanoid() function assigned to key below generates a unique id\r\n  const userHasPickedTemplate = (\r\n    <section className=\"wrapper-after-click\">\r\n      <SelectRps\r\n        component={clickedComponent.component}\r\n        id={clickedComponent.id}\r\n        borderColor={clickedComponent.borderColor}\r\n        img={clickedComponent.img}\r\n        alt={clickedComponent.alt}\r\n        key={nanoid()}\r\n      />\r\n      <p className=\"you-picked\">YOU PICKED</p>\r\n      <div className=\"socket\"></div>\r\n      <SelectRps\r\n        component={pcPickedComponent.component}\r\n        id={pcPickedComponent.id}\r\n        borderColor={pcPickedComponent.borderColor}\r\n        img={pcPickedComponent.img}\r\n        alt={pcPickedComponent.alt}\r\n        key={nanoid()}\r\n      />\r\n      {declareVerdict ? (\r\n        <p className=\"the-house-picked\">{housePicked}</p>\r\n      ) : null}\r\n      <h2 className=\"verdict-text\">{verdictText}</h2>\r\n      {declareVerdict ? (\r\n        <button\r\n          className=\"play-again\"\r\n          onClick={() => {\r\n            setHasPicked(false);\r\n            setDeclareVerdict(false);\r\n          }}\r\n        >\r\n          {playAgain}\r\n        </button>\r\n      ) : null}\r\n    </section>\r\n  );\r\n\r\n  return (\r\n    <div className=\"rps-body\">\r\n      <section className=\"heading\">\r\n        <img\r\n          className=\"rock-paper-scissors-img\"\r\n          src={logo}\r\n          alt=\"rock-paper-scissors\"\r\n        />\r\n        <div className=\"score-board\">\r\n          <p className=\"score\">SCORE</p>\r\n          <p className=\"number\">{score}</p>\r\n        </div>\r\n      </section>\r\n      {!hasPicked ? userPickTemplate : userHasPickedTemplate}\r\n      <button className=\"rules\" onClick={toggleModal}>\r\n        RULES\r\n      </button>\r\n      {showModal ? (\r\n        <Modal>\r\n          <img src={imageRules} alt=\"rules\" className=\"image-rules\" />\r\n          <button onClick={toggleModal}>\r\n            <img src={iconClose} alt=\"close\" className=\"icon-close\" />\r\n          </button>\r\n        </Modal>\r\n      ) : null}\r\n      <footer className=\"footer-rps\">\r\n        <Link to=\"/\">check out my todo app</Link>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\nexport default Display;\r\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { nanoid } from \"nanoid\";\nimport usePrevious from \"./usePrevious\";\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Display from \"./components/Display\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed,\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n\n  const listHeadingRef = useRef(null);\n\n  const prevTaskLength = usePrevious(tasks.length);\n\n  function addTask(name) {\n    const newTask = { id: \"task-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map((task) => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    ));\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const taskNoun = taskList.length === 1 ? \"task\" : \"tasks\";\n  const headingText = `${taskList.length} ${taskNoun} remaining`;\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/rps\">\n          <Display />\n        </Route>\n        <Route path=\"/\">\n          <div className=\"todoapp stack-large\">\n            <h1>Todo</h1>\n\n            <Form addTask={addTask} />\n            <div className=\"filters btn-group stack-exception\">\n              {filterList}\n            </div>\n\n            <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n              {headingText}\n            </h2>\n\n            <ul\n              role=\"list\"\n              className=\"todo-list stack-large stack-exception\"\n              aria-labelledby=\"list-heading\"\n            >\n              {taskList}\n            </ul>\n            <footer className=\"footer-todo-app\">\n              <Link to=\"/rps\">check out my rock-paper-scissors game</Link>\n            </footer>\n          </div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst DATA = [\n  { id: 'todo-0', name: 'Eat', completed: true},\n  { id: 'todo-1', name: 'sleep', completed: false },\n  { id: 'todo-2', name: 'Repeat', completed: false}\n]\nReactDOM.render(\n  <App tasks = {DATA}/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}